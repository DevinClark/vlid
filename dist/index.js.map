{"version":3,"sources":["lang/en.js","i18n.js","validate.js","vBase.js","vBoolean.js","vNumber.js","vObject.js","vString.js","index.js"],"names":["module","exports","BOOLEAN_BASE","GENERIC_ERROR","NUMBER_BASE","NUMBER_RULE_MIN","NUMBER_RULE_MAX","OBJECT_BASE","STRING_BASE","lang","require","t","key","i18nString","undefined","Error","args","format","msg","fields","reduce","currentValue","currentIndex","replace","validateSync","any","data","opts","_doCast","_casts","forEach","cb","results","_rules","map","rule","message","run","errors","filter","r","isValid","every","validate","_msg","_base","_cast","cast","on","push","required","v","vobj","value","casted","toLowerCase","includes","Number","isNaN","min","max","vBase","schema","isObject","Object","prototype","toString","call","shouldCast","dt","isPlainObject","keys","length","emailRegex","String","alphanum","regex","email","test","parts","split","some","part","len","pattern","url","str","RegExp","vBoolean","vNumber","vObject","vString","factory","vBaseMethods","methods","assign","obj","create","setPrototypeOf","boolean","number","object","string"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  BOOLEAN_BASE: '$1 is not boolean true/false',\n  GENERIC_ERROR: '$1 failed validation',\n  NUMBER_BASE: '$1 is not a number',\n  NUMBER_RULE_MIN: 'Number $1 must be larger than or equal to $2',\n  NUMBER_RULE_MAX: 'Number $1 must be less than or equal to $2',\n  OBJECT_BASE: '$1 is not an object',\n  STRING_BASE: '$1 is not a string',\n};\n","const lang = require('./lang/en');\n\nfunction t(key, ...args) {\n  let i18nString = lang[key];\n\n  if (i18nString === undefined) {\n    throw new Error('Missing translation for key ' + key);\n  }\n\n  return format(i18nString, args);\n}\n\nfunction format(msg, fields) {\n  return fields.reduce(function(msg, currentValue, currentIndex) {\n    return msg.replace('$' + (currentIndex + 1), currentValue);\n  }, msg);\n}\n\nmodule.exports = {\n  t,\n  format,\n};\n","module.exports = {\n  validateSync: function(any, data, opts = {}) {\n      // Cast value if specified (strict by default)\n      if (any._doCast || opts._doCast) {\n        any._casts.forEach(cb => data = cb(data));\n      }\n\n      let results = any._rules.map(rule => {\n        let msg =\n          typeof rule.message === 'function'\n            ? rule.message(data, opts)\n            : rule.message;\n\n        return rule.run(data) || new Error(msg);\n      });\n      let errors = results.filter(r => r instanceof Error);\n      let isValid = results.every(r => r === true);\n\n      return {\n        data,\n        errors,\n        isValid,\n      };\n  },\n};\n","const { t } = require('./i18n');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = function vBase() {\n  let _rules = [];\n  let _casts = [];\n  let _doCast = false;\n  let _msg = GENERIC_ERROR;\n\n  return {\n    _base() {},\n    _cast() {},\n\n    cast(on) {\n      if (typeof on === 'function') {\n        _casts.push(on);\n        return this;\n      }\n\n      _doCast = on === false ? false : true;\n      return this;\n    },\n\n    message(msg) {\n      if (!msg) {\n        return _msg;\n      }\n      _msg = msg;\n    },\n\n    required() {\n      return this.rule(v => v !== undefined && v !== null && v !== '');\n    },\n\n    rule(run, message = GENERIC_ERROR) {\n      _rules.push({ run, message });\n      return this;\n    },\n\n    validateSync(data, opts = {}) {\n      this._cast(); // Always run casting rules\n      this._base(); // Always run base validation rule for type\n      let vobj = {\n        _casts,\n        _doCast,\n        _rules,\n      };\n\n      return validate.validateSync(vobj, data, opts);\n    },\n  };\n};\n","const { t } = require('./i18n');\n\nmodule.exports = function vNumber() {\n  return {\n    _base() {\n      return this.rule(\n        value => typeof value === 'boolean',\n        value => t('BOOLEAN_BASE', value)\n      );\n    },\n    _cast() {\n      return this.cast(value => {\n        let casted = value;\n        let vt = typeof value;\n        let trueValues = [1, 'true', 't', 'on', 'yes'];\n        let falseValues = [0, 'false', 'f', 'off', 'no', ''];\n\n        // Lowercase strings for comparison\n        value = vt === 'string' ? value.toLowerCase() : value;\n\n        if (trueValues.includes(value)) {\n          casted = true;\n        }\n\n        if (falseValues.includes(value)) {\n          casted = false;\n        }\n\n        return casted;\n      });\n    },\n  };\n};\n\n","const { t } = require('./i18n');\n\nmodule.exports = function vNumber() {\n  return {\n    _base() {\n      return this.rule(\n        value => typeof value === 'number' && !Number.isNaN(value),\n        value => t('NUMBER_BASE', value)\n      );\n    },\n    _cast() {\n      return this.cast(Number);\n    },\n    min(min) {\n      return this.rule(\n        value => value >= min,\n        value => t('NUMBER_RULE_MIN', value, min)\n      );\n    },\n    max(max) {\n      return this.rule(\n        value => value <= max,\n        value => t('NUMBER_RULE_MAX', value, max)\n      );\n    },\n  };\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = function vObject(schema) {\n  let _rules = [];\n  let _casts = [];\n  let _doCast = false;\n  let _schema = schema || {};\n\n  function isObject(value) {\n    return (\n      typeof value === 'object'\n      && Object.prototype.toString.call(value) === '[object Object]'\n    );\n  }\n\n  return {\n    _base() {\n      return this.rule(isObject, value => t('OBJECT_BASE', value));\n    },\n\n    cast(on) {\n      if (typeof on === 'function') {\n        _casts.push(on);\n        return this;\n      }\n\n      _doCast = on === false ? false : true;\n      return this;\n    },\n\n\n    rule(run, message = GENERIC_ERROR) {\n      _rules.push({ run, message });\n      return this;\n    },\n\n    /**\n     * Override base validation\n     */\n    validateSync(data, opts = {}) {\n      let vBaseObj = vBase();\n      let results = [];\n      let shouldCast = opts._doCast || _doCast;\n      let vobj = {\n        _casts,\n        _doCast: shouldCast,\n        _rules,\n      };\n\n      this._cast();\n      this._base();\n      results.push(validate.validateSync(vobj, data, opts)); // do base validation\n\n      let dt = typeof data;\n      let isPlainObject = false;\n\n      if (dt === 'object') {\n        isPlainObject = Object.prototype.toString.call(data) === '[object Object]';\n      }\n\n      if (data && isPlainObject) {\n        Object.keys(schema).forEach(key => {\n          results.push(schema[key].validateSync(data[key], { key, _doCast: shouldCast }));\n        });\n      }\n\n      let errors = results.filter(r => r.errors.length > 0);\n      let isValid = results.every(r => r.isValid === true);\n\n      return {\n        isValid,\n        errors,\n      };\n    },\n  };\n};\n","const { t } = require('./i18n');\n\n/* @link https://github.com/manishsaraan/email-validator/blob/master/index.js */\nconst emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nmodule.exports = function vString() {\n  return {\n    _base() {\n      return this.rule(\n        value => typeof value === 'string',\n        value => t('STRING_BASE', value)\n      );\n    },\n\n    _cast() {\n      return this.cast(String);\n    },\n\n    alphanum() {\n      return this.regex(/^[a-zA-Z0-9]+$/);\n    },\n\n    email() {\n      return this.rule(function(email) {\n        if (!email) return false;\n\n        if (email.length > 254) return false;\n\n        var valid = emailRegex.test(email);\n        if (!valid) return false;\n\n        // Further checking of some things regex can't handle\n        var parts = email.split('@');\n        if (parts[0].length > 64) return false;\n\n        var domainParts = parts[1].split('.');\n        if (\n          domainParts.some(function(part) {\n            return part.length > 63;\n          })\n        )\n          return false;\n\n        return true;\n      });\n    },\n\n    min(len) {\n      return this.rule(value => value.length >= len);\n    },\n\n    max(len) {\n      return this.rule(value => value.length <= len);\n    },\n\n    regex(pattern) {\n      return this.rule(value => pattern.test(value));\n    },\n\n    url(str) {\n      return this.rule(function validURL(str) {\n        var pattern = new RegExp(\n          '^(https?:\\\\/\\\\/)?' + // protocol\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$',\n          'i'\n        ); // fragment locator\n        return !!pattern.test(str);\n      });\n    },\n  };\n};\n","const vBase = require('./vBase');\nconst vBoolean = require('./vBoolean');\nconst vNumber = require('./vNumber');\nconst vObject = require('./vObject');\nconst vString = require('./vString');\n\nfunction factory(module) {\n  const vBaseMethods = vBase();\n  const methods = Object.assign(vBaseMethods, module);\n\n  const obj = Object.create(methods, {\n    vBase: {\n      value: vBaseMethods,\n    }\n  });\n\n  Object.setPrototypeOf(obj, Object.create(vBaseMethods));\n\n  return obj;\n}\n\nmodule.exports = {\n  any: () => factory({}),\n  boolean: () => factory(vBoolean()),\n  number: () => factory(vNumber()),\n  object: (obj) => factory(vObject(obj)),\n  string: () => factory(vString()),\n  validateSync(schema, data) {\n    return schema.validateSync(data);\n  },\n};\n"]}