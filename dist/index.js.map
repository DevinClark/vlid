{"version":3,"sources":["lang/en.js","i18n.js","validate.js","vBase.js","vArray.js","vBoolean.js","vDate.js","vNumber.js","vObject.js","vString.js","index.js"],"names":["module","exports","ARRAY_BASE","ARRAY_RULE_MIN","ARRAY_RULE_MAX","BOOLEAN_BASE","DATE_BASE","DATE_RULE_MIN","DATE_RULE_MAX","DATE_RULE_ISO","GENERIC_OR","GENERIC_ERROR","GENERIC_ERROR_MULTIPLE","GENERIC_REQUIRED","NUMBER_BASE","NUMBER_RULE_MIN","NUMBER_RULE_MAX","OBJECT_BASE","STRING_BASE","STRING_RULE_ALPHANUM","STRING_RULE_EMAIL","STRING_RULE_MIN","STRING_RULE_MAX","STRING_RULE_REGEX","STRING_RULE_URL","lang","require","t","key","args","i18nString","undefined","Error","format","msg","fields","reduce","currentValue","currentIndex","replace","ValidationError","constructor","captureStackTrace","createError","path","e","validate","any","data","opts","results","validateSync","Object","assign","async","Promise","all","map","r","resolve","then","formatResults","result","isValid","err","message","reject","errors","castData","_default","_allow","isAllowed","Array","isArray","includes","formatData","schema","some","filter","length","acc","val","concat","join","hasPromises","_rules","rule","ruleData","rawData","ruleResult","run","flattenErrors","arrayFlatten","array","_doCast","cast","_casts","forEach","cb","every","_cast","_base","allow","value","on","turnOn","push","default","required","v","vBase","_schema","items","min","max","index","casted","toLowerCase","isoDateRegExp","RegExp","isISODate","str","test","isValidDate","d","Date","isFinite","castToDate","input","timestamp","parse","isNaN","iso","Number","isObject","prototype","toString","call","shouldCast","dt","isPlainObject","keys","emailRegex","String","alphanum","regex","email","parts","split","part","len","pattern","url","vArray","vBoolean","vDate","vNumber","vObject","vString","boolean","date","number","object","obj","string"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  ARRAY_BASE: 'Must be an array',\n  ARRAY_RULE_MIN: 'Number of array items must be at least $1',\n  ARRAY_RULE_MAX: 'Number of array items must be no greater than $1',\n  BOOLEAN_BASE: 'Must be a boolean',\n  DATE_BASE: 'Must be a date',\n  DATE_RULE_MIN: 'Date must be after $1',\n  DATE_RULE_MAX: 'Date must be before $1',\n  DATE_RULE_ISO: 'Date must be in ISO-8601 format',\n  GENERIC_OR: ' OR ',\n  GENERIC_ERROR: 'Failed validation',\n  GENERIC_ERROR_MULTIPLE: 'Failed one or more validations',\n  GENERIC_REQUIRED: 'Is required and was not supplied',\n  NUMBER_BASE: 'Must be a number',\n  NUMBER_RULE_MIN: 'Must be larger than or equal to $1',\n  NUMBER_RULE_MAX: 'Must be less than or equal to $1',\n  OBJECT_BASE: 'Must be an object',\n  STRING_BASE: 'Must be a string',\n  STRING_RULE_ALPHANUM: 'Must be an alphanumeric string',\n  STRING_RULE_EMAIL: 'Must be an email address',\n  STRING_RULE_MIN: 'Must be longer than or equal to $1 characters',\n  STRING_RULE_MAX: 'Must be shorter than or equal to $1 characters',\n  STRING_RULE_REGEX: 'Failed regex pattern $1',\n  STRING_RULE_URL: 'Must be a URL',\n};\n","const lang = require('./lang/en');\n\nfunction t(key, ...args) {\n  let i18nString = lang[key];\n\n  if (i18nString === undefined) {\n    throw new Error('Missing translation for key ' + key);\n  }\n\n  return format(i18nString, args);\n}\n\nfunction format(msg, fields) {\n  return fields.reduce(function(msg, currentValue, currentIndex) {\n    return msg.replace('$' + (currentIndex + 1), currentValue);\n  }, msg);\n}\n\nmodule.exports = {\n  t,\n  format,\n};\n","const { t } = require('./i18n');\n\n/**\n * ValidationError class\n */\nclass ValidationError extends Error {\n  constructor(...args) {\n    super(...args);\n    Error.captureStackTrace(this, ValidationError);\n  }\n}\n\nfunction createError(msg, path = null) {\n  let e = new ValidationError(msg);\n\n  e.path = path;\n\n  return e;\n}\n\n/**\n * Async validation function\n *\n * @return Promise\n */\nfunction validate(any, data, opts = {}) {\n  let results = validateSync(any, data, Object.assign(opts, { async: true }));\n\n  return Promise.all(results.map(r => r instanceof Promise ? r : Promise.resolve(r)))\n    .then(results => formatResults(results, data))\n    .then(result => {\n      if (!result.isValid) {\n        let err = createError(result.message);\n\n        Object.assign(err, result);\n\n        return Promise.reject(err);\n      }\n\n      return result;\n    });\n}\n\n/**\n * Primary validation function\n */\nfunction validateSync(any, data, opts = {}) {\n  let path = opts.path || '';\n  let errors = [];\n  let isValid = true;\n  let results = [];\n  let castData = data === undefined ? any._default : data;\n\n  if (any._allow !== undefined) {\n    let isAllowed = Array.isArray(any._allow) ? any._allow.includes(castData) : any._allow === castData;\n\n    if (isAllowed) {\n      return {\n        data: castData,\n        errors: [],\n        isValid: true,\n      };\n    }\n  }\n\n  castData = formatData(any, castData, opts);\n\n  // Array = If ANY validation rules passes, the whole thing passes\n  if (Array.isArray(any)) {\n    results = any.map(schema => validateSync(schema, data));\n    isValid = results.some(r => r.isValid === true);\n\n    // Clear errors if isValid (at least one rule returned true)\n    errors = isValid ? [] : results.filter(r => r.errors.length > 0)\n      .map(r => r.errors)\n      .reduce((acc, val) => acc.concat(val), []);\n\n    // Return a single ValidationError\n    if (errors.length > 0) {\n      errors = [createError(t('GENERIC_ERROR_MULTIPLE') + ': (' + errors.map(e => e.message).join(') ' + t('GENERIC_OR') + ' (') + ')', path)];\n    }\n\n    return {\n      data: castData,\n      errors,\n      isValid,\n    };\n  // Normal single validation\n  } else {\n    results = any._rules.map(rule => {\n      let ruleData = rule.rawData ? data : castData;\n      let msg =\n        typeof rule.message === 'function'\n        ? rule.message(ruleData, opts)\n        : rule.message;\n\n      let ruleResult = rule.run(ruleData) || createError(msg, path);\n\n      return ruleResult;\n    });\n    let hasPromises = results.filter(r => r instanceof Promise).length > 0;\n\n    if (hasPromises && !opts.async) {\n      throw createError('Cannot return Promise futures from vlid.validateSync()', path);\n    }\n  }\n\n  return opts.async ? results : formatResults(results, castData, opts.path);\n}\n\nfunction flattenErrors(results) {\n  return arrayFlatten(results.filter(r => r.errors ? r.errors.length > 0 : r instanceof Error)\n      .map(r => r.errors || r));\n}\n\nfunction arrayFlatten(array) {\n  return array.reduce((acc, val) => acc.concat(val), []);\n}\n\nfunction formatData(any, data, opts) {\n  let castData = data === undefined ? any._default : data;\n\n  // Cast value if specified (strict by default)\n  if (any._doCast || opts.cast) {\n    any._casts.forEach(cb => castData = cb(castData));\n  }\n\n  return castData;\n}\n\n/**\n * Format array of results into a return object\n */\nfunction formatResults(results, data, path = null) {\n  let errors = results.filter(r => r instanceof Error);\n  let isValid = results.every(r => r === true);\n\n  let result = {\n    data,\n    errors,\n    isValid,\n    path,\n  };\n\n  // Show nested results when there is a previous path\n  if (!path) {\n    result.errors = flattenErrors(results);\n    result.results = results.filter(r => r.isValid === false);\n    result.isValid = result.errors.length === 0;\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  flattenErrors,\n  formatData,\n  formatResults,\n  validate,\n  validateSync,\n  ValidationError,\n};\n","const { t } = require('./i18n');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = class vBase {\n  constructor() {\n    this._allow;\n    this._default;\n    this._rules = [];\n    this._casts = [];\n    this._doCast = false;\n\n    this._cast(); // Always run casting rules\n    this._base(); // Always run base validation rule for type\n  }\n\n  // These should be overridden by inheriting classes\n  _base() {}\n  _cast() {}\n\n  allow(value) {\n    this._allow = value;\n    return this;\n  }\n\n  cast(on, turnOn = true) {\n    if (typeof on === 'function') {\n      this._casts.push(on);\n\n      if (this._doCast === false) {\n        this._doCast = turnOn;\n      }\n\n      return this;\n    }\n\n    this._doCast = on === false ? false : true;\n    return this;\n  }\n\n  default(value) {\n    this._default = value;\n    return this.allow(value); // always allow the default value by default\n  }\n\n  required(err = null) {\n    return this.rule(v => v !== undefined && v !== null && v !== '', err || t('GENERIC_REQUIRED'));\n  }\n\n  rule(run, message = GENERIC_ERROR, opts = {}) {\n    if (typeof run !== 'function') {\n      throw new Error('rule() first argument must be a function. Recieved: ' + typeof run);\n    }\n\n    this._rules.push(Object.assign({ run, message }, opts));\n    return this;\n  }\n\n  validate(data, opts = {}) {\n    return validate.validate(this, data, opts);\n  }\n\n  validateSync(data, opts = {}) {\n    return validate.validateSync(this, data, opts);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\n\nmodule.exports = class vArray extends vBase {\n  constructor() {\n    super();\n\n    this._schema;\n  }\n\n  _base() {\n    return this.rule(Array.isArray, value => t('ARRAY_BASE', value));\n  }\n\n  items(schema) {\n    this._schema = schema;\n    return this;\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value.length >= min,\n      value => err || t('ARRAY_RULE_MIN', min)\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value.length <= max,\n      value => err || t('ARRAY_RULE_MAX', max)\n    );\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    if (!Array.isArray(data)) {\n      return validate.formatResults(results);\n    }\n\n    if (this._schema) {\n      data.forEach((value, index) => {\n        results.push(this._schema.validateSync(value));\n      });\n    }\n\n    return validate.formatResults(results);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vBoolean extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'boolean',\n      value => t('BOOLEAN_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(value => {\n      let casted = value;\n      let vt = typeof value;\n      let trueValues = [1, 'true', 't', 'on', 'yes'];\n      let falseValues = [0, 'false', 'f', 'off', 'no', ''];\n\n      // Lowercase strings for comparison\n      value = vt === 'string' ? value.toLowerCase() : value;\n\n      if (trueValues.includes(value)) {\n        casted = true;\n      }\n\n      if (falseValues.includes(value)) {\n        casted = false;\n      }\n\n      return casted;\n    }, false);\n  }\n};\n\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nconst isoDateRegExp = new RegExp( /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/ );\n\nfunction isISODate( str ) {\n      return isoDateRegExp.test( str );\n}\n\nmodule.exports = class vDate extends vBase {\n  _base() {\n    return this.rule(isValidDate, value => t('DATE_BASE', value));\n  }\n\n  _cast() {\n    return this.cast(castToDate, false);\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value >= min,\n      err || t('DATE_RULE_MIN', min)\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value <= max,\n      err || t('DATE_RULE_MAX', max)\n    );\n  }\n\n  iso(err = null) {\n    this.cast(); // This rule requires casting (ISO-8601 date strings can be parsed)\n    this._base = () => {};\n\n    // This ISO rule has to be run on the raw input data, not the cast data\n    return this.rule(isISODate, err || t('DATE_RULE_ISO'), { rawData: true });\n  }\n};\n\nfunction isValidDate(d) {\n  return d instanceof Date && isFinite(d);\n}\n\nfunction castToDate(input) {\n  // If not a date, do some stuff\n  if (!(input instanceof Date)) {\n    let timestamp = Date.parse(input);\n\n    if (!isNaN(timestamp)) {\n      return new Date(timestamp);\n    }\n  }\n\n  return input;\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vNumber extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'number' && !Number.isNaN(value),\n      value => t('NUMBER_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(Number, false);\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value >= min,\n      value => err || t('NUMBER_RULE_MIN', min)\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value <= max,\n      value => err || t('NUMBER_RULE_MAX', max)\n    );\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\n\nmodule.exports = class vObject extends vBase {\n  constructor(schema = {}) {\n    super();\n\n    this._schema = schema || {};\n  }\n\n  _base() {\n    return this.rule(isObject, value => t('OBJECT_BASE', value));\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n    let shouldCast = opts.cast || this._doCast;\n\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    let dt = typeof data;\n    let isPlainObject = false;\n\n    if (dt === 'object') {\n      isPlainObject = Object.prototype.toString.call(data) === '[object Object]';\n    }\n\n    if (data && isPlainObject) {\n      Object.keys(this._schema).forEach(path => {\n        results.push(this._schema[path].validateSync(data[path], { path, cast: shouldCast }));\n      });\n    }\n\n    return validate.formatResults(results);\n  }\n};\n\nfunction isObject(value) {\n  return (\n    typeof value === 'object'\n    && Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\n/* @link https://github.com/manishsaraan/email-validator/blob/master/index.js */\nconst emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nmodule.exports = class vString extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'string',\n      value => t('STRING_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(String, false);\n  }\n\n  alphanum() {\n    return this.regex(/^[a-zA-Z0-9]+$/, t('STRING_RULE_ALPHANUM'));\n  }\n\n  email(err) {\n    return this.rule(function(email) {\n      if (!email) return false;\n\n      if (email.length > 254) return false;\n\n      var valid = emailRegex.test(email);\n      if (!valid) return false;\n\n      // Further checking of some things regex can't handle\n      var parts = email.split('@');\n      if (parts[0].length > 64) return false;\n\n      var domainParts = parts[1].split('.');\n      if (\n        domainParts.some(function(part) {\n          return part.length > 63;\n        })\n      )\n        return false;\n\n      return true;\n    }, err || t('STRING_RULE_EMAIL'));\n  }\n\n  min(len, err = null) {\n    return this.rule(value => value.length >= len, err || t('STRING_RULE_MIN', len));\n  }\n\n  max(len, err = null) {\n    return this.rule(value => value.length <= len, err || t('STRING_RULE_MAX', len));\n  }\n\n  regex(pattern, err = null) {\n    return this.rule(value => pattern.test(value), err || t('STRING_RULE_REGEX', pattern));\n  }\n\n  url(str, err = null) {\n    return this.rule(function validURL(str) {\n      var pattern = new RegExp(\n        '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n          '(\\\\#[-a-z\\\\d_]*)?$',\n        'i'\n      ); // fragment locator\n      return !!pattern.test(str);\n    }, err || t('STRING_RULE_URL'));\n  }\n};\n","const vArray = require('./vArray');\nconst vBase = require('./vBase');\nconst vBoolean = require('./vBoolean');\nconst vDate = require('./vDate');\nconst vNumber = require('./vNumber');\nconst vObject = require('./vObject');\nconst vString = require('./vString');\nconst { validate, validateSync } = require('./validate');\n\nmodule.exports = {\n  any: () => new vBase(),\n  array: () => new vArray(),\n  boolean: () => new vBoolean(),\n  date: () => new vDate(),\n  number: () => new vNumber(),\n  object: (obj) => new vObject(obj),\n  string: () => new vString(),\n  validate(schema, data) {\n    return schema.validate ? schema.validate(data) : validate(schema, data);\n  },\n  validateSync(schema, data) {\n    return schema.validateSync ? schema.validateSync(data) : validateSync(schema, data);\n  },\n};\n"]}