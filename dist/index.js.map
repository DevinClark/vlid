{"version":3,"sources":["lang/en.js","i18n.js","validate.js","vBase.js","vArray.js","vBoolean.js","vDate.js","vNumber.js","vObject.js","vString.js","index.js"],"names":["module","exports","ARRAY_BASE","ARRAY_RULE_MIN","ARRAY_RULE_MAX","BOOLEAN_BASE","DATE_BASE","DATE_RULE_MIN","DATE_RULE_MAX","DATE_RULE_ISO","GENERIC_ERROR","NUMBER_BASE","NUMBER_RULE_MIN","NUMBER_RULE_MAX","OBJECT_BASE","STRING_BASE","lang","require","t","key","args","i18nString","undefined","Error","format","msg","fields","reduce","currentValue","currentIndex","replace","validateSync","any","data","opts","castData","_default","_allow","isAllowed","Array","isArray","includes","errors","isValid","_doCast","_casts","forEach","cb","results","_rules","map","rule","ruleData","rawData","message","run","filter","r","every","validate","constructor","_msg","_cast","_base","allow","value","cast","on","turnOn","push","default","required","v","Object","assign","vBase","_schema","items","schema","min","err","length","max","index","acc","val","concat","casted","toLowerCase","isoDateRegExp","RegExp","isISODate","str","test","isValidDate","d","Date","isFinite","castToDate","input","timestamp","parse","isNaN","iso","Number","isObject","prototype","toString","call","shouldCast","dt","isPlainObject","keys","emailRegex","String","alphanum","regex","email","parts","split","some","part","len","pattern","url","vArray","vBoolean","vDate","vNumber","vObject","vString","array","boolean","date","number","object","obj","string"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  ARRAY_BASE: '$1 is not a valid array value',\n  ARRAY_RULE_MIN: 'Number of array items must be at least $1',\n  ARRAY_RULE_MAX: 'Number of array items must be no greater than $1',\n  BOOLEAN_BASE: '$1 is not a valid boolean value',\n  DATE_BASE: '$1 is not a valid date',\n  DATE_RULE_MIN: 'Date $1 must be after $2',\n  DATE_RULE_MAX: 'Date $1 must be before $2',\n  DATE_RULE_ISO: 'Date $1 is not a valid date in ISO-8601 format',\n  GENERIC_ERROR: '$1 failed validation',\n  NUMBER_BASE: '$1 is not a number',\n  NUMBER_RULE_MIN: 'Number $1 must be larger than or equal to $2',\n  NUMBER_RULE_MAX: 'Number $1 must be less than or equal to $2',\n  OBJECT_BASE: '$1 is not an object',\n  STRING_BASE: '$1 is not a string',\n};\n","const lang = require('./lang/en');\n\nfunction t(key, ...args) {\n  let i18nString = lang[key];\n\n  if (i18nString === undefined) {\n    throw new Error('Missing translation for key ' + key);\n  }\n\n  return format(i18nString, args);\n}\n\nfunction format(msg, fields) {\n  return fields.reduce(function(msg, currentValue, currentIndex) {\n    return msg.replace('$' + (currentIndex + 1), '\"' + currentValue + '\"');\n  }, msg);\n}\n\nmodule.exports = {\n  t,\n  format,\n};\n","module.exports = {\n  validateSync: function(any, data, opts = {}) {\n    let castData = data === undefined ? any._default : data;\n\n    if (any._allow !== undefined) {\n      let isAllowed = Array.isArray(any._allow) ? any._allow.includes(castData) : any._allow === castData;\n\n      if (isAllowed) {\n        return {\n          data: castData,\n          errors: [],\n          isValid: true,\n        };\n      }\n    }\n\n    // Cast value if specified (strict by default)\n    if (any._doCast || opts._doCast) {\n      any._casts.forEach(cb => castData = cb(castData));\n    }\n\n    let results = any._rules.map(rule => {\n      let ruleData = rule.rawData ? data : castData;\n      let msg =\n        typeof rule.message === 'function'\n        ? rule.message(ruleData, opts)\n        : rule.message;\n\n      return rule.run(ruleData) || new Error(msg);\n    });\n    let errors = results.filter(r => r instanceof Error);\n    let isValid = results.every(r => r === true);\n\n    return {\n      data: castData,\n      errors,\n      isValid,\n    };\n  },\n};\n","const { t } = require('./i18n');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = class vBase {\n  constructor() {\n    this._allow;\n    this._default;\n    this._rules = [];\n    this._casts = [];\n    this._doCast = false;\n    this._msg = GENERIC_ERROR;\n\n    this._cast(); // Always run casting rules\n    this._base(); // Always run base validation rule for type\n  }\n\n  // These should be overridden by inheriting classes\n  _base() {}\n  _cast() {}\n\n  allow(value) {\n    this._allow = value;\n    return this;\n  }\n\n  cast(on, turnOn = true) {\n    if (typeof on === 'function') {\n      this._casts.push(on);\n\n      if (this._doCast === false) {\n        this._doCast = turnOn;\n      }\n\n      return this;\n    }\n\n    this._doCast = on === false ? false : true;\n    return this;\n  }\n\n  default(value) {\n    this._default = value;\n    return this.allow(value); // always allow the default value by default\n  }\n\n  message(msg) {\n    if (!msg) {\n      return this._msg;\n    }\n    this._msg = msg;\n  }\n\n  required() {\n    return this.rule(v => v !== undefined && v !== null && v !== '');\n  }\n\n  rule(run, message = GENERIC_ERROR, opts = {}) {\n    this._rules.push(Object.assign({ run, message }, opts));\n    return this;\n  }\n\n  validateSync(data, opts = {}) {\n    return validate.validateSync(this, data, opts);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\n\nmodule.exports = class vArray extends vBase {\n  constructor() {\n    super();\n\n    this._schema;\n  }\n\n  _base() {\n    return this.rule(Array.isArray, value => t('ARRAY_BASE', value));\n  }\n\n  items(schema) {\n    this._schema = schema;\n    return this;\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value.length >= min,\n      value => err || t('ARRAY_RULE_MIN', min)\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value.length <= max,\n      value => err || t('ARRAY_RULE_MAX', max)\n    );\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    if (!Array.isArray(data)) {\n      return {\n        data,\n        isValid: results[0].isValid,\n        errors: results[0].errors,\n      };\n    }\n\n    if (this._schema) {\n      data.forEach((value, index) => {\n        results.push(this._schema.validateSync(value));\n      });\n    }\n\n    let errors = results.filter(r => r.errors.length > 0)\n      .map(r => r.errors)\n      .reduce((acc, val) => acc.concat(val), []);\n    let isValid = results.every(r => r.isValid === true);\n\n    return {\n      data,\n      isValid,\n      errors,\n    };\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vBoolean extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'boolean',\n      value => t('BOOLEAN_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(value => {\n      let casted = value;\n      let vt = typeof value;\n      let trueValues = [1, 'true', 't', 'on', 'yes'];\n      let falseValues = [0, 'false', 'f', 'off', 'no', ''];\n\n      // Lowercase strings for comparison\n      value = vt === 'string' ? value.toLowerCase() : value;\n\n      if (trueValues.includes(value)) {\n        casted = true;\n      }\n\n      if (falseValues.includes(value)) {\n        casted = false;\n      }\n\n      return casted;\n    }, false);\n  }\n};\n\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nconst isoDateRegExp = new RegExp( /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/ );\n\nfunction isISODate( str ) {\n      return isoDateRegExp.test( str );\n}\n\nmodule.exports = class vDate extends vBase {\n  _base() {\n    return this.rule(isValidDate, value => t('DATE_BASE', value));\n  }\n\n  _cast() {\n    return this.cast(castToDate, false);\n  }\n\n  min(min) {\n    return this.rule(\n      value => value >= min,\n      value => t('DATE_RULE_MIN', value, min)\n    );\n  }\n\n  max(max) {\n    return this.rule(\n      value => value <= max,\n      value => t('DATE_RULE_MAX', value, max)\n    );\n  }\n\n  iso() {\n    this.cast(); // This rule requires casting (ISO-8601 date strings can be parsed)\n    this._base = () => {};\n\n    // This ISO rule has to be run on the raw input data, not the cast data\n    return this.rule(isISODate, value => t('DATE_RULE_ISO', value), { rawData: true });\n  }\n};\n\nfunction isValidDate(d) {\n  return d instanceof Date && isFinite(d);\n}\n\nfunction castToDate(input) {\n  // If not a date, do some stuff\n  if (!(input instanceof Date)) {\n    let timestamp = Date.parse(input);\n\n    if (!isNaN(timestamp)) {\n      return new Date(timestamp);\n    }\n  }\n\n  return input;\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vNumber extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'number' && !Number.isNaN(value),\n      value => t('NUMBER_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(Number, false);\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value >= min,\n      value => err || t('NUMBER_RULE_MIN', value, min)\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value <= max,\n      value => err || t('NUMBER_RULE_MAX', value, max)\n    );\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\n\nmodule.exports = class vObject extends vBase {\n  constructor(schema = {}) {\n    super();\n\n    this._schema = schema || {};\n  }\n\n  _base() {\n    return this.rule(isObject, value => t('OBJECT_BASE', value));\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n    let shouldCast = opts._doCast || this._doCast;\n\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    let dt = typeof data;\n    let isPlainObject = false;\n\n    if (dt === 'object') {\n      isPlainObject = Object.prototype.toString.call(data) === '[object Object]';\n    }\n\n    if (data && isPlainObject) {\n      Object.keys(this._schema).forEach(key => {\n        results.push(this._schema[key].validateSync(data[key], { key, _doCast: shouldCast }));\n      });\n    }\n\n    let errors = results.filter(r => r.errors.length > 0);\n    let isValid = results.every(r => r.isValid === true);\n\n    return {\n      data,\n      isValid,\n      errors,\n    };\n  }\n};\n\nfunction isObject(value) {\n  return (\n    typeof value === 'object'\n    && Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\n/* @link https://github.com/manishsaraan/email-validator/blob/master/index.js */\nconst emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nmodule.exports = class vString extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'string',\n      value => t('STRING_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(String, false);\n  }\n\n  alphanum() {\n    return this.regex(/^[a-zA-Z0-9]+$/);\n  }\n\n  email() {\n    return this.rule(function(email) {\n      if (!email) return false;\n\n      if (email.length > 254) return false;\n\n      var valid = emailRegex.test(email);\n      if (!valid) return false;\n\n      // Further checking of some things regex can't handle\n      var parts = email.split('@');\n      if (parts[0].length > 64) return false;\n\n      var domainParts = parts[1].split('.');\n      if (\n        domainParts.some(function(part) {\n          return part.length > 63;\n        })\n      )\n        return false;\n\n      return true;\n    });\n  }\n\n  min(len) {\n    return this.rule(value => value.length >= len);\n  }\n\n  max(len) {\n    return this.rule(value => value.length <= len);\n  }\n\n  regex(pattern) {\n    return this.rule(value => pattern.test(value));\n  }\n\n  url(str) {\n    return this.rule(function validURL(str) {\n      var pattern = new RegExp(\n        '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n          '(\\\\#[-a-z\\\\d_]*)?$',\n        'i'\n      ); // fragment locator\n      return !!pattern.test(str);\n    });\n  }\n};\n","const vArray = require('./vArray');\nconst vBase = require('./vBase');\nconst vBoolean = require('./vBoolean');\nconst vDate = require('./vDate');\nconst vNumber = require('./vNumber');\nconst vObject = require('./vObject');\nconst vString = require('./vString');\n\nmodule.exports = {\n  any: () => new vBase(),\n  array: () => new vArray(),\n  boolean: () => new vBoolean(),\n  date: () => new vDate(),\n  number: () => new vNumber(),\n  object: (obj) => new vObject(obj),\n  string: () => new vString(),\n  validateSync(schema, data) {\n    return schema.validateSync(data);\n  },\n};\n"]}