{"version":3,"sources":["lang/en.js","i18n.js","validate.js","vBase.js","vBoolean.js","vNumber.js","vObject.js","vString.js","index.js"],"names":["module","exports","BOOLEAN_BASE","GENERIC_ERROR","NUMBER_BASE","NUMBER_RULE_MIN","NUMBER_RULE_MAX","OBJECT_BASE","STRING_BASE","lang","require","t","key","args","i18nString","undefined","Error","format","msg","fields","reduce","currentValue","currentIndex","replace","validateSync","any","data","opts","_doCast","_casts","forEach","cb","results","_rules","map","rule","message","run","errors","filter","r","isValid","every","validate","constructor","_msg","_cast","_base","cast","on","turnOn","push","required","v","vBase","value","casted","toLowerCase","includes","Number","isNaN","min","max","isObject","Object","prototype","toString","call","schema","_schema","shouldCast","dt","isPlainObject","keys","length","emailRegex","String","alphanum","regex","email","test","parts","split","some","part","len","pattern","url","str","RegExp","vBoolean","vNumber","vObject","vString","boolean","number","object","obj","string"],"mappings":";AAAAA,OAAOC,QAAU,CACfC,aAAc,+BACdC,cAAe,uBACfC,YAAa,qBACbC,gBAAiB,+CACjBC,gBAAiB,6CACjBC,YAAa,sBACbC,YAAa;;ACPf,MAAMC,EAAOC,QAAQ,aAErB,SAASC,EAAEC,KAAQC,GACbC,IAAAA,EAAaL,EAAKG,GAElBE,QAAeC,IAAfD,EACI,MAAA,IAAIE,MAAM,+BAAiCJ,GAG5CK,OAAAA,EAAOH,EAAYD,GAG5B,SAASI,EAAOC,EAAKC,GACZA,OAAAA,EAAOC,OAAO,SAASF,EAAKG,EAAcC,GACxCJ,OAAAA,EAAIK,QAAQ,KAAOD,EAAe,GAAID,IAC5CH,GAGLlB,OAAOC,QAAU,CACfU,EAAAA,EACAM,OAAAA;;ACpBFjB,OAAOC,QAAU,CACfuB,aAAc,SAASC,EAAKC,EAAMC,EAAO,KAEnCF,EAAIG,SAAWD,EAAKC,UACtBH,EAAII,OAAOC,QAAQC,GAAML,EAAOK,EAAGL,IAGjCM,IAAAA,EAAUP,EAAIQ,OAAOC,IAAIC,IACvBjB,IAAAA,EACsB,mBAAjBiB,EAAKC,QACVD,EAAKC,QAAQV,EAAMC,GACnBQ,EAAKC,QAEFD,OAAAA,EAAKE,IAAIX,IAAS,IAAIV,MAAME,KAEjCoB,EAASN,EAAQO,OAAOC,GAAKA,aAAaxB,OAC1CyB,EAAUT,EAAQU,MAAMF,IAAW,IAANA,GAE1B,MAAA,CACLd,KAAAA,EACAY,OAAAA,EACAG,QAAAA;;ACrBN,MAAM,EAAE9B,GAAMD,QAAQ,UAChBiC,EAAWjC,QAAQ,cACnBP,EAAgBQ,EAAE,iBAExBX,OAAOC,QAAU,MACf2C,cACOX,KAAAA,OAAS,GACTJ,KAAAA,OAAS,GACTD,KAAAA,SAAU,EACViB,KAAAA,KAAO1C,EAEP2C,KAAAA,QACAC,KAAAA,QAIPA,SACAD,SAEAE,KAAKC,EAAIC,GAAS,GACZ,MAAc,mBAAPD,GACJpB,KAAAA,OAAOsB,KAAKF,IAEI,IAAjB,KAAKrB,UACFA,KAAAA,QAAUsB,GAGV,OAGJtB,KAAAA,SAAiB,IAAPqB,EACR,MAGTb,QAAQlB,GACF,IAACA,EACI,OAAA,KAAK2B,KAETA,KAAAA,KAAO3B,EAGdkC,WACS,OAAA,KAAKjB,KAAKkB,GAAKA,MAAAA,GAAuC,KAANA,GAGzDlB,KAAKE,EAAKD,EAAUjC,GAEX,OADF8B,KAAAA,OAAOkB,KAAK,CAAEd,IAAAA,EAAKD,QAAAA,IACjB,KAGTZ,aAAaE,EAAMC,EAAO,IACjBgB,OAAAA,EAASnB,aAAa,KAAME,EAAMC;;ACnD7C,MAAM,EAAEhB,GAAMD,QAAQ,UAChB4C,EAAQ5C,QAAQ,WAEtBV,OAAOC,QAAU,cAAuBqD,EACtCP,QACS,OAAA,KAAKZ,KACVoB,GAA0B,kBAAVA,EAChBA,GAAS5C,EAAE,eAAgB4C,IAI/BT,QACS,OAAA,KAAKE,KAAKO,IACXC,IAAAA,EAASD,EAgBNC,OAVPD,EAAe,kBALCA,EAKUA,EAAME,cAAgBF,EAJ/B,CAAC,EAAG,OAAQ,IAAK,KAAM,OAMzBG,SAASH,KACtBC,GAAS,GANO,CAAC,EAAG,QAAS,IAAK,MAAO,KAAM,IASjCE,SAASH,KACvBC,GAAS,GAGJA,IACN;;AC9BP,MAAM,EAAE7C,GAAMD,QAAQ,UAChB4C,EAAQ5C,QAAQ,WAEtBV,OAAOC,QAAU,cAAsBqD,EACrCP,QACS,OAAA,KAAKZ,KACVoB,GAA0B,iBAAVA,IAAuBI,OAAOC,MAAML,GACpDA,GAAS5C,EAAE,cAAe4C,IAI9BT,QACS,OAAA,KAAKE,KAAKW,QAAQ,GAG3BE,IAAIA,GACK,OAAA,KAAK1B,KACVoB,GAASA,GAASM,EAClBN,GAAS5C,EAAE,kBAAmB4C,EAAOM,IAIzCC,IAAIA,GACK,OAAA,KAAK3B,KACVoB,GAASA,GAASO,EAClBP,GAAS5C,EAAE,kBAAmB4C,EAAOO;;ACzB3C,MAAM,EAAEnD,GAAMD,QAAQ,UAChB4C,EAAQ5C,QAAQ,WAChBiC,EAAWjC,QAAQ,cACnBP,EAAgBQ,EAAE,iBA6CxB,SAASoD,EAASR,GAEd,MAAiB,iBAAVA,GACsC,oBAA1CS,OAAOC,UAAUC,SAASC,KAAKZ,GA9CtCvD,OAAOC,QAAU,cAAsBqD,EACrCV,YAAYwB,EAAS,IACnB,QAEKC,KAAAA,QAAUD,GAAU,GAG3BrB,QACS,OAAA,KAAKZ,KAAK4B,EAAUR,GAAS5C,EAAE,cAAe4C,IAMvD/B,aAAaE,EAAMC,EAAO,IACpBK,IAAAA,EAAU,GACVsC,EAAa3C,EAAKC,SAAW,KAAKA,QAEtCI,EAAQmB,KAAKR,EAASnB,aAAa,KAAME,EAAMC,IAE3C4C,IACAC,GAAgB,EAET,kBAHK9C,IAId8C,EAAyD,oBAAzCR,OAAOC,UAAUC,SAASC,KAAKzC,IAG7CA,GAAQ8C,GACVR,OAAOS,KAAK,KAAKJ,SAASvC,QAAQlB,IAChCoB,EAAQmB,KAAK,KAAKkB,QAAQzD,GAAKY,aAAaE,EAAKd,GAAM,CAAEA,IAAAA,EAAKgB,QAAS0C,OAIvEhC,IAAAA,EAASN,EAAQO,OAAOC,GAAKA,EAAEF,OAAOoC,OAAS,GAG5C,MAAA,CACLjC,QAHYT,EAAQU,MAAMF,IAAmB,IAAdA,EAAEC,SAIjCH,OAAAA;;AC3CN,MAAM,EAAE3B,GAAMD,QAAQ,UAChB4C,EAAQ5C,QAAQ,WAGhBiE,EAAa,iIAEnB3E,OAAOC,QAAU,cAAsBqD,EACrCP,QACS,OAAA,KAAKZ,KACVoB,GAA0B,iBAAVA,EAChBA,GAAS5C,EAAE,cAAe4C,IAI9BT,QACS,OAAA,KAAKE,KAAK4B,QAAQ,GAG3BC,WACS,OAAA,KAAKC,MAAM,kBAGpBC,QACS,OAAA,KAAK5C,KAAK,SAAS4C,GACpB,IAACA,EAAO,OAAO,EAEfA,GAAAA,EAAML,OAAS,IAAK,OAAO,EAG3B,IADQC,EAAWK,KAAKD,GAChB,OAAO,EAGfE,IAAAA,EAAQF,EAAMG,MAAM,KACpBD,QAAAA,EAAM,GAAGP,OAAS,MAEJO,EAAM,GAAGC,MAAM,KAEnBC,KAAK,SAASC,GACjBA,OAAAA,EAAKV,OAAS,OAS7Bb,IAAIwB,GACK,OAAA,KAAKlD,KAAKoB,GAASA,EAAMmB,QAAUW,GAG5CvB,IAAIuB,GACK,OAAA,KAAKlD,KAAKoB,GAASA,EAAMmB,QAAUW,GAG5CP,MAAMQ,GACG,OAAA,KAAKnD,KAAKoB,GAAS+B,EAAQN,KAAKzB,IAGzCgC,IAAIC,GACK,OAAA,KAAKrD,KAAK,SAAkBqD,GAU1B,QATO,IAAIC,OAChB,wKAMA,KAEeT,KAAKQ;;ACtE5B,MAAMlC,EAAQ5C,QAAQ,WAChBgF,EAAWhF,QAAQ,cACnBiF,EAAUjF,QAAQ,aAClBkF,EAAUlF,QAAQ,aAClBmF,EAAUnF,QAAQ,aAExBV,OAAOC,QAAU,CACfwB,IAAK,IAAM,IAAI6B,EACfwC,QAAS,IAAM,IAAIJ,EACnBK,OAAQ,IAAM,IAAIJ,EAClBK,OAASC,GAAQ,IAAIL,EAAQK,GAC7BC,OAAQ,IAAM,IAAIL,EAClBrE,aAAY,CAAC4C,EAAQ1C,IACZ0C,EAAO5C,aAAaE","file":"index.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  BOOLEAN_BASE: '$1 is not boolean true/false',\n  GENERIC_ERROR: '$1 failed validation',\n  NUMBER_BASE: '$1 is not a number',\n  NUMBER_RULE_MIN: 'Number $1 must be larger than or equal to $2',\n  NUMBER_RULE_MAX: 'Number $1 must be less than or equal to $2',\n  OBJECT_BASE: '$1 is not an object',\n  STRING_BASE: '$1 is not a string',\n};\n","const lang = require('./lang/en');\n\nfunction t(key, ...args) {\n  let i18nString = lang[key];\n\n  if (i18nString === undefined) {\n    throw new Error('Missing translation for key ' + key);\n  }\n\n  return format(i18nString, args);\n}\n\nfunction format(msg, fields) {\n  return fields.reduce(function(msg, currentValue, currentIndex) {\n    return msg.replace('$' + (currentIndex + 1), currentValue);\n  }, msg);\n}\n\nmodule.exports = {\n  t,\n  format,\n};\n","module.exports = {\n  validateSync: function(any, data, opts = {}) {\n    // Cast value if specified (strict by default)\n    if (any._doCast || opts._doCast) {\n      any._casts.forEach(cb => data = cb(data));\n    }\n\n    let results = any._rules.map(rule => {\n      let msg =\n        typeof rule.message === 'function'\n        ? rule.message(data, opts)\n        : rule.message;\n\n      return rule.run(data) || new Error(msg);\n    });\n    let errors = results.filter(r => r instanceof Error);\n    let isValid = results.every(r => r === true);\n\n    return {\n      data,\n      errors,\n      isValid,\n    };\n  },\n};\n","const { t } = require('./i18n');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = class vBase {\n  constructor() {\n    this._rules = [];\n    this._casts = [];\n    this._doCast = false;\n    this._msg = GENERIC_ERROR;\n\n    this._cast(); // Always run casting rules\n    this._base(); // Always run base validation rule for type\n  }\n\n  // These should be overridden by inheriting classes\n  _base() {}\n  _cast() {}\n\n  cast(on, turnOn = true) {\n    if (typeof on === 'function') {\n      this._casts.push(on);\n\n      if (this._doCast === false) {\n        this._doCast = turnOn;\n      }\n\n      return this;\n    }\n\n    this._doCast = on === false ? false : true;\n    return this;\n  }\n\n  message(msg) {\n    if (!msg) {\n      return this._msg;\n    }\n    this._msg = msg;\n  }\n\n  required() {\n    return this.rule(v => v !== undefined && v !== null && v !== '');\n  }\n\n  rule(run, message = GENERIC_ERROR) {\n    this._rules.push({ run, message });\n    return this;\n  }\n\n  validateSync(data, opts = {}) {\n    return validate.validateSync(this, data, opts);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vBoolean extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'boolean',\n      value => t('BOOLEAN_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(value => {\n      let casted = value;\n      let vt = typeof value;\n      let trueValues = [1, 'true', 't', 'on', 'yes'];\n      let falseValues = [0, 'false', 'f', 'off', 'no', ''];\n\n      // Lowercase strings for comparison\n      value = vt === 'string' ? value.toLowerCase() : value;\n\n      if (trueValues.includes(value)) {\n        casted = true;\n      }\n\n      if (falseValues.includes(value)) {\n        casted = false;\n      }\n\n      return casted;\n    }, false);\n  }\n};\n\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vNumber extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'number' && !Number.isNaN(value),\n      value => t('NUMBER_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(Number, false);\n  }\n\n  min(min) {\n    return this.rule(\n      value => value >= min,\n      value => t('NUMBER_RULE_MIN', value, min)\n    );\n  }\n\n  max(max) {\n    return this.rule(\n      value => value <= max,\n      value => t('NUMBER_RULE_MAX', value, max)\n    );\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = class vObject extends vBase {\n  constructor(schema = {}) {\n    super();\n\n    this._schema = schema || {};\n  }\n\n  _base() {\n    return this.rule(isObject, value => t('OBJECT_BASE', value));\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n    let shouldCast = opts._doCast || this._doCast;\n\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    let dt = typeof data;\n    let isPlainObject = false;\n\n    if (dt === 'object') {\n      isPlainObject = Object.prototype.toString.call(data) === '[object Object]';\n    }\n\n    if (data && isPlainObject) {\n      Object.keys(this._schema).forEach(key => {\n        results.push(this._schema[key].validateSync(data[key], { key, _doCast: shouldCast }));\n      });\n    }\n\n    let errors = results.filter(r => r.errors.length > 0);\n    let isValid = results.every(r => r.isValid === true);\n\n    return {\n      isValid,\n      errors,\n    };\n  }\n};\n\nfunction isObject(value) {\n  return (\n    typeof value === 'object'\n    && Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\n/* @link https://github.com/manishsaraan/email-validator/blob/master/index.js */\nconst emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nmodule.exports = class vString extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'string',\n      value => t('STRING_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(String, false);\n  }\n\n  alphanum() {\n    return this.regex(/^[a-zA-Z0-9]+$/);\n  }\n\n  email() {\n    return this.rule(function(email) {\n      if (!email) return false;\n\n      if (email.length > 254) return false;\n\n      var valid = emailRegex.test(email);\n      if (!valid) return false;\n\n      // Further checking of some things regex can't handle\n      var parts = email.split('@');\n      if (parts[0].length > 64) return false;\n\n      var domainParts = parts[1].split('.');\n      if (\n        domainParts.some(function(part) {\n          return part.length > 63;\n        })\n      )\n        return false;\n\n      return true;\n    });\n  }\n\n  min(len) {\n    return this.rule(value => value.length >= len);\n  }\n\n  max(len) {\n    return this.rule(value => value.length <= len);\n  }\n\n  regex(pattern) {\n    return this.rule(value => pattern.test(value));\n  }\n\n  url(str) {\n    return this.rule(function validURL(str) {\n      var pattern = new RegExp(\n        '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n          '(\\\\#[-a-z\\\\d_]*)?$',\n        'i'\n      ); // fragment locator\n      return !!pattern.test(str);\n    });\n  }\n};\n","const vBase = require('./vBase');\nconst vBoolean = require('./vBoolean');\nconst vNumber = require('./vNumber');\nconst vObject = require('./vObject');\nconst vString = require('./vString');\n\nmodule.exports = {\n  any: () => new vBase(),\n  boolean: () => new vBoolean(),\n  number: () => new vNumber(),\n  object: (obj) => new vObject(obj),\n  string: () => new vString(),\n  validateSync(schema, data) {\n    return schema.validateSync(data);\n  },\n};\n"]}